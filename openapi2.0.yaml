swagger: "2.0"
info:
  title: "Headless Blog API"
  version: "1.0.0"
paths:
  /posts:
    get:
      summary: "Get blog posts"
      parameters:
        - name: start_date
          in: query
          type: string
          format: date
          description: "Filter posts by start date (YYYY-MM-DD)"
        - name: end_date
          in: query
          type: string
          format: date
          description: "Filter posts by end date (YYYY-MM-DD)"
        - name: limit
          in: query
          type: integer
          description: "Maximum number of posts to retrieve (default: 10)"
          default: 10
          maximum: 10
      responses:
        200:
          description: "Return a list of blog posts"
          schema:
            type: array
            items:
              $ref: "#/definitions/PostIndex"
    post:
      summary: "Create a new blog post"
      parameters:
        - name: post_data
          in: body
          required: true
          schema:
            $ref: "#/definitions/PostInput"
      responses:
        201:
          description: "Blog post created successfully"
        400:
          description: "Invalid input data"
  /posts/{post_id}:
    get:
      summary: "Get a single blog post by ID"
      parameters:
        - name: post_id
          in: path
          type: integer
          required: true
      responses:
        200:
          description: "Return the details of the specified blog post"
          schema:
            $ref: "#/definitions/Post"
        404:
          description: "Blog post not found"
    put:
      summary: "Update a blog post by ID"
      parameters:
        - name: post_id
          in: path
          type: integer
          required: true
        - name: post_data
          in: body
          required: true
          schema:
            $ref: "#/definitions/PostInput"
      responses:
        200:
          description: "Blog post updated successfully"
        400:
          description: "Invalid input data"
        404:
          description: "Blog post not found"
    delete:
      summary: "Delete a blog post by ID"
      parameters:
        - name: post_id
          in: path
          type: integer
          required: true
      responses:
        200:
          description: "Blog post deleted successfully"
        404:
          description: "Blog post not found"
definitions:
  PostIndex:
    type: object
    properties:
      id:
        type: integer
      title:
        type: string
      published_at:
        type: string
        format: date-time

  Post:
    allOf:
      - $ref: "#/definitions/PostIndex"
      - type: object
        properties:
          content:
            type: string
  PostInput:
    type: object
    properties:
      title:
        type: string
      content:
        type: string
    required:
      - title
      - content
